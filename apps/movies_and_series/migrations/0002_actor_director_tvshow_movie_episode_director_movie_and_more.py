# Generated by Django 4.2.1 on 2023-06-05 16:46

import apps.movies_and_series.utils
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('movies_and_series', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=128, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=128, verbose_name='Фамилия')),
                ('date_of_birth', models.DateField(auto_now_add=True, verbose_name='Дата рождения')),
                ('biography', models.CharField(max_length=512, verbose_name='Биография')),
            ],
            options={
                'verbose_name': 'Актер',
                'verbose_name_plural': 'Актеры',
            },
        ),
        migrations.CreateModel(
            name='Director',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=128, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=128, verbose_name='Фамилия')),
                ('date_of_birth', models.DateField(auto_now_add=True, verbose_name='Дата рождения')),
                ('biography', models.CharField(max_length=512, verbose_name='Биография')),
            ],
            options={
                'verbose_name': 'Режиссер',
                'verbose_name_plural': 'Режиссеры',
            },
        ),
        migrations.CreateModel(
            name='TVShow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='Название')),
                ('poster', models.ImageField(blank=True, null=True, upload_to=apps.movies_and_series.utils.upload_instance, verbose_name='Постер')),
                ('season', models.IntegerField(verbose_name='Номер сезона')),
                ('trailer', models.URLField(verbose_name='Трейлер')),
                ('description', models.CharField(max_length=512, verbose_name='Описание')),
                ('release_date', models.DateField(default=django.utils.timezone.now, verbose_name='Дата выхода на сайте')),
                ('age_rating', models.IntegerField(verbose_name='Возрастной рейтинг')),
                ('actor', models.ManyToManyField(related_name='tvshows', to='movies_and_series.actor', verbose_name='Актер')),
                ('director', models.ManyToManyField(related_name='tvshows', to='movies_and_series.director', verbose_name='Режиссер')),
                ('genre', models.ManyToManyField(to='movies_and_series.genre', verbose_name='Жанр')),
            ],
            options={
                'verbose_name': 'Сериал',
                'verbose_name_plural': 'Сериалы',
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='Название')),
                ('poster', models.ImageField(blank=True, null=True, upload_to=apps.movies_and_series.utils.upload_instance, verbose_name='Постер')),
                ('movie', models.FileField(null=True, upload_to='videos_uploaded', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['MOV', 'avi', 'mp4', 'webm', 'mkv'])], verbose_name='Фильм')),
                ('trailer', models.URLField(verbose_name='Трейлер')),
                ('description', models.CharField(max_length=512, verbose_name='Описание')),
                ('release_date', models.DateField(default=django.utils.timezone.now, verbose_name='Дата выхода на сайте')),
                ('age_rating', models.IntegerField(verbose_name='Возрастной рейтинг')),
                ('actor', models.ManyToManyField(related_name='movies', to='movies_and_series.actor', verbose_name='Актер')),
                ('director', models.ManyToManyField(related_name='movies', to='movies_and_series.director', verbose_name='Режиссер')),
                ('genre', models.ManyToManyField(to='movies_and_series.genre', verbose_name='Жанр')),
            ],
        ),
        migrations.CreateModel(
            name='Episode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(verbose_name='Номер эпизода')),
                ('title', models.CharField(null=True, verbose_name='Название')),
                ('episode', models.FileField(null=True, upload_to='videos_uploaded', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['MOV', 'avi', 'mp4', 'webm', 'mkv'])], verbose_name='Эпизод')),
                ('tv_show_title', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='episodes', to='movies_and_series.tvshow', verbose_name='Сериал')),
            ],
            options={
                'verbose_name': 'Эпизод',
                'verbose_name_plural': 'Эпизоды',
            },
        ),
        migrations.AddField(
            model_name='director',
            name='movie',
            field=models.ManyToManyField(related_name='directors', to='movies_and_series.movie', verbose_name='Фильм'),
        ),
        migrations.AddField(
            model_name='director',
            name='tv_shows',
            field=models.ManyToManyField(related_name='directors', to='movies_and_series.tvshow', verbose_name='Сериал'),
        ),
        migrations.AddField(
            model_name='actor',
            name='movie',
            field=models.ManyToManyField(related_name='actors', to='movies_and_series.movie', verbose_name='Фильм'),
        ),
        migrations.AddField(
            model_name='actor',
            name='tv_shows',
            field=models.ManyToManyField(related_name='actors', to='movies_and_series.tvshow', verbose_name='Сериал'),
        ),
    ]
